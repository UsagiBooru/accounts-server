/*
 * UsagiBooru Accounts API
 *
 * アカウント関連API
 *
 * API version: 2.0
 * Contact: dsgamer777@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// AccountsApiService is a service that implents the logic for the AccountsApiServicer
// This service should implement the business logic for every endpoint for the AccountsApi API. 
// Include any external packages or services that will be required by this service.
type AccountsApiService struct {
}

// NewAccountsApiService creates a default api service
func NewAccountsApiService() AccountsApiServicer {
	return &AccountsApiService{}
}

// DeleteAccount - Delete account info
func (s *AccountsApiService) DeleteAccount(ctx context.Context, accountID int32, password string) (ImplResponse, error) {
	// TODO - update DeleteAccount with the required logic for this service method.
	// Add api_accounts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(204, GeneralMessageResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(403, GeneralMessageResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(404, GeneralMessageResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteAccount method not implemented")
}

// EditAccount - Edit account info
func (s *AccountsApiService) EditAccount(ctx context.Context, accountID int32, accountStruct AccountStruct) (ImplResponse, error) {
	// TODO - update EditAccount with the required logic for this service method.
	// Add api_accounts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, AccountStruct{}) or use other options such as http.Ok ...
	//return Response(200, AccountStruct{}), nil

	//TODO: Uncomment the next line to return response Response(400, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(400, GeneralMessageResponse{}), nil

	//TODO: Uncomment the next line to return response Response(403, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(403, GeneralMessageResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(404, GeneralMessageResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("EditAccount method not implemented")
}

// GetAccount - Get account info
func (s *AccountsApiService) GetAccount(ctx context.Context, accountID int32) (ImplResponse, error) {
	// TODO - update GetAccount with the required logic for this service method.
	// Add api_accounts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, AccountStruct{}) or use other options such as http.Ok ...
	//return Response(200, AccountStruct{}), nil

	//TODO: Uncomment the next line to return response Response(404, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(404, GeneralMessageResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAccount method not implemented")
}

// GetAccountMe - Get user info (self)
func (s *AccountsApiService) GetAccountMe(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAccountMe with the required logic for this service method.
	// Add api_accounts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, AccountStruct{}) or use other options such as http.Ok ...
	//return Response(200, AccountStruct{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAccountMe method not implemented")
}

// GetUploadHistory - Get upload history
func (s *AccountsApiService) GetUploadHistory(ctx context.Context, accountID int32, page int32, sort string, order string, perPage int32) (ImplResponse, error) {
	// TODO - update GetUploadHistory with the required logic for this service method.
	// Add api_accounts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetUploadHistoryResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetUploadHistoryResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(404, GeneralMessageResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUploadHistory method not implemented")
}

// LoginWithForm - Login with form
func (s *AccountsApiService) LoginWithForm(ctx context.Context, postLoginWithFormRequest PostLoginWithFormRequest) (ImplResponse, error) {
	// TODO - update LoginWithForm with the required logic for this service method.
	// Add api_accounts_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, PostLoginWithFormResponse{}) or use other options such as http.Ok ...
	//return Response(200, PostLoginWithFormResponse{}), nil

	//TODO: Uncomment the next line to return response Response(400, GeneralMessageResponse{}) or use other options such as http.Ok ...
	//return Response(400, GeneralMessageResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("LoginWithForm method not implemented")
}

